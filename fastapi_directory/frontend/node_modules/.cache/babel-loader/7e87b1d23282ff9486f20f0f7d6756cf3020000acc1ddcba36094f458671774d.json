{"ast":null,"code":"const API_BASE_URL = \"http://localhost:8000/api\";\nfunction getAuthHeaders() {\n  const token = localStorage.getItem(\"access_token\");\n  if (!token) {\n    throw new Error(\"No access token found, please login\");\n  }\n  return {\n    Authorization: `Bearer ${token}`\n  };\n}\nexport async function fetchUsers() {\n  const response = await fetch(`${API_BASE_URL}/users/`, {\n    headers: {\n      ...getAuthHeaders()\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch users\");\n  }\n  return await response.json();\n}\nexport async function createUser(userData) {\n  const response = await fetch(`${API_BASE_URL}/users/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...getAuthHeaders()\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create user\");\n  }\n  return await response.json();\n}\nexport async function fetchErrors() {\n  const response = await fetch(`${API_BASE_URL}/errors/`, {\n    headers: {\n      ...getAuthHeaders()\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch errors\");\n  }\n  return await response.json();\n}\nexport async function deleteUser(userId) {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      ...getAuthHeaders()\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to delete user\");\n  }\n  return true;\n}\nexport async function updateUserRole(userId, newRoleId) {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/role`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...getAuthHeaders()\n    },\n    body: JSON.stringify({\n      role_id: newRoleId\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to update user role\");\n  }\n  return await response.json();\n}\nexport async function createError(errorData) {\n  // Отправляем данные как FormData с local_kw\n  const url = new URL(`${API_BASE_URL}/errors/`);\n  url.searchParams.append(\"local_kw\", \"1\");\n  const formData = new FormData();\n  formData.append(\"name\", errorData.name);\n  if (errorData.description) {\n    formData.append(\"description\", errorData.description);\n  }\n  if (errorData.solution_description) {\n    formData.append(\"solution_description\", errorData.solution_description);\n  }\n  if (errorData.files && errorData.files.length > 0) {\n    errorData.files.forEach(file => {\n      formData.append(\"files\", file);\n    });\n  }\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    headers: {\n      ...getAuthHeaders()\n    },\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create error\");\n  }\n  return await response.json();\n}\nexport async function updateError(errorId, errorData) {\n  const response = await fetch(`${API_BASE_URL}/errors/${errorId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...getAuthHeaders()\n    },\n    body: JSON.stringify(errorData)\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to update error\");\n  }\n  return await response.json();\n}\nexport async function deleteError(errorId) {\n  const response = await fetch(`${API_BASE_URL}/errors/${errorId}`, {\n    method: \"DELETE\",\n    headers: {\n      ...getAuthHeaders()\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to delete error\");\n  }\n  return true;\n}\nexport async function uploadErrorImage(errorId, file) {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const response = await fetch(`${API_BASE_URL}/errors/${errorId}/images/`, {\n    method: \"POST\",\n    headers: {\n      ...getAuthHeaders()\n    },\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to upload error image\");\n  }\n  return await response.json();\n}\n// Add more API client functions as needed for other endpoints","map":{"version":3,"names":["API_BASE_URL","getAuthHeaders","token","localStorage","getItem","Error","Authorization","fetchUsers","response","fetch","headers","ok","json","createUser","userData","method","body","JSON","stringify","fetchErrors","deleteUser","userId","updateUserRole","newRoleId","role_id","createError","errorData","url","URL","searchParams","append","formData","FormData","name","description","solution_description","files","length","forEach","file","toString","updateError","errorId","deleteError","uploadErrorImage"],"sources":["F:/Progect/Errors/fastapi_directory/frontend/src/apiClient.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:8000/api\";\r\n\r\nfunction getAuthHeaders() {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  if (!token) {\r\n    throw new Error(\"No access token found, please login\");\r\n  }\r\n  return { Authorization: `Bearer ${token}` };\r\n}\r\n\r\nexport async function fetchUsers() {\r\n  const response = await fetch(`${API_BASE_URL}/users/`, {\r\n    headers: {\r\n      ...getAuthHeaders(),\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch users\");\r\n  }\r\n  return await response.json();\r\n}\r\n\r\nexport async function createUser(userData) {\r\n  const response = await fetch(`${API_BASE_URL}/users/`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...getAuthHeaders(),\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to create user\");\r\n  }\r\n  return await response.json();\r\n}\r\n\r\nexport async function fetchErrors() {\r\n  const response = await fetch(`${API_BASE_URL}/errors/`, {\r\n    headers: {\r\n      ...getAuthHeaders(),\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to fetch errors\");\r\n  }\r\n  return await response.json();\r\n}\r\n\r\nexport async function deleteUser(userId) {\r\n  const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      ...getAuthHeaders(),\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to delete user\");\r\n  }\r\n  return true;\r\n}\r\n\r\nexport async function updateUserRole(userId, newRoleId) {\r\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/role`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...getAuthHeaders(),\r\n    },\r\n    body: JSON.stringify({ role_id: newRoleId }),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to update user role\");\r\n  }\r\n  return await response.json();\r\n}\r\n\r\nexport async function createError(errorData) {\r\n  // Отправляем данные как FormData с local_kw\r\n  const url = new URL(`${API_BASE_URL}/errors/`);\r\n  url.searchParams.append(\"local_kw\", \"1\");\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"name\", errorData.name);\r\n  if (errorData.description) {\r\n    formData.append(\"description\", errorData.description);\r\n  }\r\n  if (errorData.solution_description) {\r\n    formData.append(\"solution_description\", errorData.solution_description);\r\n  }\r\n  if (errorData.files && errorData.files.length > 0) {\r\n    errorData.files.forEach((file) => {\r\n      formData.append(\"files\", file);\r\n    });\r\n  }\r\n\r\n  const response = await fetch(url.toString(), {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...getAuthHeaders(),\r\n    },\r\n    body: formData,\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to create error\");\r\n  }\r\n  return await response.json();\r\n}\r\n\r\nexport async function updateError(errorId, errorData) {\r\n  const response = await fetch(`${API_BASE_URL}/errors/${errorId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...getAuthHeaders(),\r\n    },\r\n    body: JSON.stringify(errorData),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to update error\");\r\n  }\r\n  return await response.json();\r\n}\r\n\r\nexport async function deleteError(errorId) {\r\n  const response = await fetch(`${API_BASE_URL}/errors/${errorId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      ...getAuthHeaders(),\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to delete error\");\r\n  }\r\n  return true;\r\n}\r\n\r\nexport async function uploadErrorImage(errorId, file) {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  const response = await fetch(`${API_BASE_URL}/errors/${errorId}/images/`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...getAuthHeaders(),\r\n    },\r\n    body: formData,\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error(\"Failed to upload error image\");\r\n  }\r\n  return await response.json();\r\n}\r\n// Add more API client functions as needed for other endpoints\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}