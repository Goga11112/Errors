{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate,useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,requiredRole=null}=_ref;const[isAuthorized,setIsAuthorized]=useState(false);const[loading,setLoading]=useState(true);const navigate=useNavigate();const location=useLocation();const[token,setToken]=useState(localStorage.getItem('access_token'));// Listen for changes to the token in localStorage\nuseEffect(()=>{const handleStorageChange=e=>{if(e.key==='access_token'){setToken(e.newValue);}};window.addEventListener('storage',handleStorageChange);// Also check periodically in case of same-tab changes\nconst interval=setInterval(()=>{const currentToken=localStorage.getItem('access_token');if(currentToken!==token){setToken(currentToken);}},1000);return()=>{window.removeEventListener('storage',handleStorageChange);clearInterval(interval);};},[token]);useEffect(()=>{const checkAuthorization=async()=>{if(!token){// If no token, redirect to auth-required page\nnavigate('/auth-required',{replace:true,state:{from:location.pathname}});setLoading(false);return;}try{// Check if token is valid by calling the /me endpoint\nconst response=await fetch('/api/auth/users/me',{headers:{Authorization:\"Bearer \".concat(token)}});if(response.ok){const userData=await response.json();// If a specific role is required, check it\nif(requiredRole){const hasRole=requiredRole==='admin'&&(userData.is_admin||userData.is_super_admin)||requiredRole==='super_admin'&&userData.is_super_admin;if(hasRole){setIsAuthorized(true);}else{// User doesn't have required role, redirect to auth-required\nnavigate('/auth-required',{replace:true,state:{from:location.pathname}});}}else{// No specific role required, just need to be authenticated\nsetIsAuthorized(true);}}else{// Token is invalid, remove it and redirect to auth-required\nlocalStorage.removeItem('access_token');navigate('/auth-required',{replace:true,state:{from:location.pathname}});}}catch(error){// Error checking token, remove it and redirect to auth-required\nlocalStorage.removeItem('access_token');navigate('/auth-required',{replace:true,state:{from:location.pathname}});}finally{setLoading(false);}};checkAuthorization();},[token,requiredRole,navigate,location.pathname]);if(loading){return/*#__PURE__*/_jsx(\"div\",{style:{color:'#eaeaea',padding:'20px'},children:\"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438...\"});}return isAuthorized?children:null;};export default ProtectedRoute;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsx","_jsx","ProtectedRoute","_ref","children","requiredRole","isAuthorized","setIsAuthorized","loading","setLoading","navigate","location","token","setToken","localStorage","getItem","handleStorageChange","e","key","newValue","window","addEventListener","interval","setInterval","currentToken","removeEventListener","clearInterval","checkAuthorization","replace","state","from","pathname","response","fetch","headers","Authorization","concat","ok","userData","json","hasRole","is_admin","is_super_admin","removeItem","error","style","color","padding"],"sources":["F:/Progect/Errors/fastapi_directory/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children, requiredRole = null }) => {\r\n  const [isAuthorized, setIsAuthorized] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\r\n\r\n  // Listen for changes to the token in localStorage\r\n  useEffect(() => {\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === 'access_token') {\r\n        setToken(e.newValue);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n    \r\n    // Also check periodically in case of same-tab changes\r\n    const interval = setInterval(() => {\r\n      const currentToken = localStorage.getItem('access_token');\r\n      if (currentToken !== token) {\r\n        setToken(currentToken);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n      clearInterval(interval);\r\n    };\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    const checkAuthorization = async () => {\r\n      if (!token) {\r\n        // If no token, redirect to auth-required page\r\n        navigate('/auth-required', { replace: true, state: { from: location.pathname } });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Check if token is valid by calling the /me endpoint\r\n        const response = await fetch('/api/auth/users/me', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const userData = await response.json();\r\n          \r\n          // If a specific role is required, check it\r\n          if (requiredRole) {\r\n            const hasRole = \r\n              (requiredRole === 'admin' && (userData.is_admin || userData.is_super_admin)) ||\r\n              (requiredRole === 'super_admin' && userData.is_super_admin);\r\n            \r\n            if (hasRole) {\r\n              setIsAuthorized(true);\r\n            } else {\r\n              // User doesn't have required role, redirect to auth-required\r\n              navigate('/auth-required', { replace: true, state: { from: location.pathname } });\r\n            }\r\n          } else {\r\n            // No specific role required, just need to be authenticated\r\n            setIsAuthorized(true);\r\n          }\r\n        } else {\r\n          // Token is invalid, remove it and redirect to auth-required\r\n          localStorage.removeItem('access_token');\r\n          navigate('/auth-required', { replace: true, state: { from: location.pathname } });\r\n        }\r\n      } catch (error) {\r\n        // Error checking token, remove it and redirect to auth-required\r\n        localStorage.removeItem('access_token');\r\n        navigate('/auth-required', { replace: true, state: { from: location.pathname } });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuthorization();\r\n  }, [token, requiredRole, navigate, location.pathname]);\r\n\r\n  if (loading) {\r\n    return <div style={{ color: '#eaeaea', padding: '20px' }}>Проверка авторизации...</div>;\r\n  }\r\n\r\n  return isAuthorized ? children : null;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}