version: '3.8'

services:
  api:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    container_name: fastapi_api
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - uploaded_images:/app/uploaded_images
    environment:  # ← Используем либо словарь, либо список (но не смешиваем!)
      UPLOAD_DIR: /app/uploaded_images
      DATABASE_URL: postgresql://postgres:postgres@db:5432/db_errors
      SECRET_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImV4cCI6MTc0NTIxOTUyNX0.-sjuDM9hG-3-c46EGUe2g0UDRWDIBnoAYZdBE5Ohdeg
      POSTGRES_HOST: db
      POSTGRES_DB: db_errors
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    env_file:
      - ./app/.env.production
    depends_on: 
      - db
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fastapi_frontend
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: fastapi_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - api
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: fastapi_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_errors
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./app/db/init.sql:/docker-entrypoint-initdb.d/init.sql  # Этот файл будет выполнен при старте
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: fastapi_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    volumes:
      - pgadmindata:/var/lib/pgadmin

volumes:
  pgdata:
  pgadmindata:
  uploaded_images:
