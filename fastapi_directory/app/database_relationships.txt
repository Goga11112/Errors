# План проекта CRM с разграничением доступа и фронтендом на React

## Backend (FastAPI)

- Модели данных:
  - Пользователь (User) с полями: username, realname, password_hash, role_id
  - Роль (Role) с полями: name, description
  - Ошибка (Error) с полями: id, name, описание и т.д.
  - Лог администратора (AdminLog) для записи действий администраторов

- Роли:
  - Главный администратор: может создавать новых администраторов, управлять ролями и пользователями
  - Обычный администратор: может создавать и просматривать ошибки
  - Пользователь: может просматривать ошибки без авторизации

- Безопасность:
  - JWT аутентификация
  - Зависимости FastAPI для проверки ролей и разграничения доступа

- API:
  - Эндпоинты для авторизации, управления пользователями, ролями, ошибками и логами
  - Эндпоинт для инициализации главного администратора (admin/admin)
  - Эндпоинт для регистрации пользователей (только администраторы и главный администратор, только главный может назначать роли)

## Frontend (React)

- Страницы и компоненты:
  - Login: форма входа с отправкой данных на backend и получением JWT
  - ErrorsList: отображение списка ошибок, доступно всем пользователям
  - AdminPanel: панель администратора с управлением пользователями и ошибками
  - AdminPanelUsers: управление пользователями (создание, просмотр)
  - AdminPanelErrors: управление ошибками (создание, просмотр)

- Маршрутизация:
  - /login — страница входа
  - /errors — список ошибок (доступен без авторизации)
  - /admin — панель администратора (требуется авторизация)

- Хранение токена:
  - JWT токен хранится в состоянии React и localStorage
  - При загрузке приложения автоматически устанавливается дефолтный токен главного администратора для удобства разработки

- Взаимодействие с backend через axios с передачей токена в заголовках

## Запуск и настройка

- Backend:
  - Запуск FastAPI приложения
  - Инициализация ролей и главного администратора через API

- Frontend:
  - Установка зависимостей через npm
  - Запуск React приложения
  - Настройка прокси для API (если необходимо)

## Дальнейшие шаги

- Добавить полноценное управление логами администраторов
- Улучшить UI/UX фронтенда
- Реализовать регистрацию пользователей
- Добавить тесты для backend и frontend
