"""Auto migration to sync models

Revision ID: f663919fd8ac
Revises: restore_error_delete_errors
Create Date: 2025-04-30 10:22:31.616275

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f663919fd8ac'
down_revision: Union[str, None] = 'restore_error_delete_errors'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('error_images')
    op.drop_index('ix_admin_logs_id', table_name='admin_logs')
    op.drop_table('admin_logs')
    op.drop_index('ix_user_password_hash', table_name='user')
    op.drop_index('ix_user_realname', table_name='user')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    op.drop_index('ix_error_name', table_name='error')
    op.drop_table('error')
    op.drop_index('ix_roles_id', table_name='roles')
    op.drop_index('ix_roles_name', table_name='roles')
    op.drop_table('roles')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_roles_name', 'roles', ['name'], unique=False)
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.create_table('error',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('error_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), server_default=sa.text("'Описание отсутствует'::text"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='error_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_error_name', 'error', ['name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('realname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='user_role_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=False)
    op.create_index('ix_user_realname', 'user', ['realname'], unique=False)
    op.create_index('ix_user_password_hash', 'user', ['password_hash'], unique=False)
    op.create_table('admin_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('admin_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['user.id'], name='admin_logs_admin_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='admin_logs_pkey')
    )
    op.create_index('ix_admin_logs_id', 'admin_logs', ['id'], unique=False)
    op.create_table('error_images',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('error_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['error_id'], ['error.id'], name='error_images_error_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='error_images_pkey')
    )
    # ### end Alembic commands ###
